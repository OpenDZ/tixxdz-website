<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>containers on Djalal Harouni</title>
    <link>https://djalal.opendz.org/tags/containers/</link>
    <description>Recent content in containers on Djalal Harouni</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright Â© 2021, Djalal Harouni; all rights reserved.</copyright>
    <lastBuildDate>Thu, 30 Nov 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://djalal.opendz.org/tags/containers/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Modernization of Linux proc filesystem and containers security</title>
      <link>https://djalal.opendz.org/post/linux-kernel-private-proc-instances-per-pidns/</link>
      <pubDate>Thu, 30 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://djalal.opendz.org/post/linux-kernel-private-proc-instances-per-pidns/</guid>
      <description>
        
          
            TL;DR: The Linux kernel procfs suffers from a historical design that prevents having multiple separate procfs instances inside the same PID namespace. All the mounts are a mirror of the internal one. This blocks developement of Linux containers, sandboxes, and other security related features.
Patch solution: PATCH RFC v3 proc: modernize proc to support multiple private instances
Problem Linux containers and other sandbox mechanisms want to hide processes, files and directories of procfs, other implementations want to restrict some procfs features.
          
          
            &lt;p&gt;&lt;a href=&#34;https://djalal.opendz.org/post/linux-kernel-private-proc-instances-per-pidns/&#34;&gt;Read More&lt;/a&gt;&lt;/p&gt;
          
        
      </description>
    </item>
    
    <item>
      <title>systemd Sandbox or systemd Lightweight Containers</title>
      <link>https://djalal.opendz.org/post/systemd-sandbox-or-systemd-lightweight-containers/</link>
      <pubDate>Sun, 15 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://djalal.opendz.org/post/systemd-sandbox-or-systemd-lightweight-containers/</guid>
      <description>
        
          
            Sandboxing IoT Apps using lightweight containers is an important step for Linux-IoT based devices, it allows to reduce the exposure from mis-configuration, bugs, or vulnerability exploitation.
 As a simple example the BrickerBot and similar worms did not use complex 0day exploits. They used simple attack vectors like unprotected remote shells accounts and according to internet resources, lot of IoT devices were affected. The straightforward solution in this case should be a firewall solution plus a powerful sandbox mechanism for apps.
          
          
            &lt;p&gt;&lt;a href=&#34;https://djalal.opendz.org/post/systemd-sandbox-or-systemd-lightweight-containers/&#34;&gt;Read More&lt;/a&gt;&lt;/p&gt;
          
        
      </description>
    </item>
    
  </channel>
</rss>
