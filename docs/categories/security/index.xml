<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>security on Djalal Harouni</title>
    <link>https://djalal.opendz.org/categories/security/</link>
    <description>Recent content in security on Djalal Harouni</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright Â© 2021, Djalal Harouni; all rights reserved.</copyright>
    <lastBuildDate>Wed, 02 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://djalal.opendz.org/categories/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Prevent Overlayfs Privilege Escalation on Ubuntu Kernels with Yaml (bpf)!</title>
      <link>https://djalal.opendz.org/post/prevent-kernel-overlayfs-ubuntu-cves-with-yaml/</link>
      <pubDate>Wed, 02 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://djalal.opendz.org/post/prevent-kernel-overlayfs-ubuntu-cves-with-yaml/</guid>
      <description>
        
          
            Past week Wiz blogged about Overlayfs bugs that can be abused on Ubuntu Kernels to perform privilege escalation, named GameOver(lay) read more here.
Those are CVE-2023-2640 and CVE-2023-32629, also Datadog has another writeup about a previous Overlayfs upstream vulnerability CVE-2023-0386.
 Background  All these are mostly the same: Overlayfs can be mounted inside a user namespace, but the security checks and value validation when copying up files and their metadata from the lower to the upper layer inside the user namespace were not sufficient.
          
          
            &lt;p&gt;&lt;a href=&#34;https://djalal.opendz.org/post/prevent-kernel-overlayfs-ubuntu-cves-with-yaml/&#34;&gt;Read More&lt;/a&gt;&lt;/p&gt;
          
        
      </description>
    </item>
    
    <item>
      <title>Kernel Image Lockdown and eBPF Flexibility!</title>
      <link>https://djalal.opendz.org/post/ebpf-kernel-image-lockdown-and-ebpf-flexibility/</link>
      <pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://djalal.opendz.org/post/ebpf-kernel-image-lockdown-and-ebpf-flexibility/</guid>
      <description>
        
          
            The Kernel Lockdown feature that was merged in Linux 5.4 is designed to prevent both direct and indirect access to a running kernel image, attempting to protect against unauthorized modification of the kernel image and to prevent access to security and cryptographic data located in kernel memory, whilst still permitting driver modules to be loaded.
 Introduction  In his post Linux kernel lockdown, integrity, and confidentiality Matthew Garrett first explains that it took around 7 years journey to get the lockdown patches merged!
          
          
            &lt;p&gt;&lt;a href=&#34;https://djalal.opendz.org/post/ebpf-kernel-image-lockdown-and-ebpf-flexibility/&#34;&gt;Read More&lt;/a&gt;&lt;/p&gt;
          
        
      </description>
    </item>
    
    <item>
      <title>eBPF: Block Linux Fileless Payload &#34;Malware&#34; Execution with BPF LSM</title>
      <link>https://djalal.opendz.org/post/ebpf-block-linux-fileless-payload-execution-with-bpf-lsm/</link>
      <pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://djalal.opendz.org/post/ebpf-block-linux-fileless-payload-execution-with-bpf-lsm/</guid>
      <description>
        
          
            Due to the security features that Linux offers, like booting directly into a readonly filesystem, making filesystems readonly at runtime for apps and containers, some attacks have been using what is known as &amp;quot;fileless binary execution&amp;quot; to avoid such protections, and gain the ability to execute binaries directly from the memory without touching or leaving traces on the disk.
From Wikipedia &amp;quot;Fileless malware is a variant of computer related malicious software that exists exclusively as a computer memory-based artifact i.
          
          
            &lt;p&gt;&lt;a href=&#34;https://djalal.opendz.org/post/ebpf-block-linux-fileless-payload-execution-with-bpf-lsm/&#34;&gt;Read More&lt;/a&gt;&lt;/p&gt;
          
        
      </description>
    </item>
    
    <item>
      <title>eBPF Summit 2021 - Talk: BPF to bridge Cloud and IoT Linux Security</title>
      <link>https://djalal.opendz.org/post/ebpf-summit-2021-talk/</link>
      <pubDate>Tue, 04 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://djalal.opendz.org/post/ebpf-summit-2021-talk/</guid>
      <description>
        
          
            At the eBPF Summit 2021, I gave a talk about how to take advantage of eBPF to try to bridge some cloud and IoT security features.
 My Talk can be found here: BPF to bridge Cloud and IoT Linux Security on youtube
All eBPF Summit 2021 here: eBPF Summit 2021 Youtube Channel
          
          
            &lt;p&gt;&lt;a href=&#34;https://djalal.opendz.org/post/ebpf-summit-2021-talk/&#34;&gt;Read More&lt;/a&gt;&lt;/p&gt;
          
        
      </description>
    </item>
    
  </channel>
</rss>
